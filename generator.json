{
  "bundleId" : "com.Bizpark.bznt9304",
  "location" : "\/Users\/kuzmakuzmin\/Documents\/gen proj\/Bizpark",
  "template" : "AppProject",
  "name" : "Bizpark",
  "teamId" : "com.Bizpark.bznt9304",
  "files" : [
    "\/Users\/kuzmakuzmin\/Documents\/gen proj\/Bizpark\/Bizpark\/Generated\/Views\/PrivacyView.swift",
    "\/Users\/kuzmakuzmin\/Documents\/gen proj\/Bizpark\/Bizpark\/Generated\/ContentView.swift",
    "\/Users\/kuzmakuzmin\/Documents\/gen proj\/Bizpark\/Bizpark\/Generated\/Views\/TermsView.swift",
    "\/Users\/kuzmakuzmin\/Documents\/gen proj\/Bizpark\/Bizpark\/Generated\/Views\/SettingsView.swift"
  ],
  "id" : "6752F3FC-139C-4BB4-A593-A781C4EBFD29",
  "chatHistory" : [
    {
      "id" : "4CD7D572-ACAC-4676-8E98-9DDF0AF9964A",
      "content" : "<usertask>Напиши приложение на SwiftUI, дизайн должен быть красивым и ярким. Вот описание: Bizpark — это легкое приложение, созданное для сбора бизнес-идей, как только они приходят вам в голову. Добавьте название и краткое описание, чтобы сохранить любую концепцию — будь то продукт, услуга или идея стартапа. Ваши идеи сохраняются в простом списке, который вы можете прокручивать или удалять в любое время.<\/usertask>",
      "timestamp" : 767610044.665418,
      "role" : "user"
    },
    {
      "id" : "FD18D3B5-974A-4D9B-93AA-B3D61386949E",
      "content" : "<write_to_file>\n<path>Models\/BusinessIdea.swift<\/path>\n<content>\n1|import Foundation\n2|\n3|struct BusinessIdea: Identifiable, Codable, Equatable {\n4|    let id: UUID\n5|    var title: String\n6|    var description: String\n7|    var createdAt: Date\n8|    \n9|    init(id: UUID = UUID(), title: String, description: String, createdAt: Date = Date()) {\n10|        self.id = id\n11|        self.title = title\n12|        self.description = description\n13|        self.createdAt = createdAt\n14|    }\n15|}\n<\/content>\n<\/write_to_file>\n\n<write_to_file>\n<path>ViewModels\/BusinessIdeasViewModel.swift<\/path>\n<content>\n1|import Foundation\n2|import SwiftUI\n3|\n4|class BusinessIdeasViewModel: ObservableObject {\n5|    @Published var ideas: [BusinessIdea] = []\n6|    private let saveKey = \"SavedBusinessIdeas\"\n7|    \n8|    init() {\n9|        loadIdeas()\n10|    }\n11|    \n12|    func addIdea(title: String, description: String) {\n13|        let idea = BusinessIdea(title: title, description: description)\n14|        ideas.insert(idea, at: 0)\n15|        saveIdeas()\n16|    }\n17|    \n18|    func deleteIdea(at offsets: IndexSet) {\n19|        ideas.remove(atOffsets: offsets)\n20|        saveIdeas()\n21|    }\n22|    \n23|    private func saveIdeas() {\n24|        if let encoded = try? JSONEncoder().encode(ideas) {\n25|            UserDefaults.standard.set(encoded, forKey: saveKey)\n26|        }\n27|    }\n28|    \n29|    private func loadIdeas() {\n30|        if let data = UserDefaults.standard.data(forKey: saveKey),\n31|           let decoded = try? JSONDecoder().decode([BusinessIdea].self, from: data) {\n32|            ideas = decoded\n33|        }\n34|    }\n35|}\n<\/content>\n<\/write_to_file>\n\n<write_to_file>\n<path>Views\/AddIdeaView.swift<\/path>\n<content>\n1|import SwiftUI\n2|\n3|struct AddIdeaView: View {\n4|    @Environment(\\.dismiss) private var dismiss\n5|    @ObservedObject var viewModel: BusinessIdeasViewModel\n6|    \n7|    @State private var title = \"\"\n8|    @State private var description = \"\"\n9|    @FocusState private var focusedField: Field?\n10|    \n11|    enum Field {\n12|        case title, description\n13|    }\n14|    \n15|    var body: some View {\n16|        NavigationView {\n17|            Form {\n18|                Section {\n19|                    TextField(\"Idea Title\", text: $title)\n20|                        .focused($focusedField, equals: .title)\n21|                        .font(.headline)\n22|                        .submitLabel(.next)\n23|                    \n24|                    TextEditor(text: $description)\n25|                        .focused($focusedField, equals: .description)\n26|                        .frame(height: 150)\n27|                        .font(.body)\n28|                }\n29|            }\n30|            .scrollDismissesKeyboard(.immediately)\n31|            .navigationTitle(\"New Business Idea\")\n32|            .navigationBarTitleDisplayMode(.inline)\n33|            .toolbar {\n34|                ToolbarItem(placement: .navigationBarLeading) {\n35|                    Button(\"Cancel\") {\n36|                        dismiss()\n37|                    }\n38|                }\n39|                \n40|                ToolbarItem(placement: .navigationBarTrailing) {\n41|                    Button(\"Save\") {\n42|                        saveIdea()\n43|                    }\n44|                    .disabled(title.isEmpty || description.isEmpty)\n45|                }\n46|                \n47|                ToolbarItemGroup(placement: .keyboard) {\n48|                    Spacer()\n49|                    Button(focusedField == .title ? \"Next\" : \"Done\") {\n50|                        if focusedField == .title {\n51|                            focusedField = .description\n52|                        } else {\n53|                            focusedField = nil\n54|                        }\n55|                    }\n56|                }\n57|            }\n58|        }\n59|    }\n60|    \n61|    private func saveIdea() {\n62|        viewModel.addIdea(title: title.trimmingCharacters(in: .whitespacesAndNewlines),\n63|                         description: description.trimmingCharacters(in: .whitespacesAndNewlines))\n64|        dismiss()\n65|    }\n66|}\n<\/content>\n<\/write_to_file>\n\n<write_to_file>\n<path>Views\/IdeaCardView.swift<\/path>\n<content>\n1|import SwiftUI\n2|\n3|struct IdeaCardView: View {\n4|    let idea: BusinessIdea\n5|    \n6|    var body: some View {\n7|        VStack(alignment: .leading, spacing: 12) {\n8|            Text(idea.title)\n9|                .font(.title2)\n10|                .fontWeight(.bold)\n11|                .foregroundColor(.primary)\n12|            \n13|            Text(idea.description)\n14|                .font(.body)\n15|                .foregroundColor(.secondary)\n16|                .lineLimit(3)\n17|            \n18|            HStack {\n19|                Image(systemName: \"clock\")\n20|                    .foregroundColor(.secondary)\n21|                Text(idea.createdAt.formatted(date: .abbreviated, time: .shortened))\n22|                    .font(.caption)\n23|                    .foregroundColor(.secondary)\n24|                Spacer()\n25|            }\n26|        }\n27|        .padding()\n28|        .background(\n29|            RoundedRectangle(cornerRadius: 16)\n30|                .fill(Color(.systemBackground))\n31|                .shadow(color: Color.black.opacity(0.1), radius: 10, x: 0, y: 5)\n32|        )\n33|        .padding(.horizontal)\n34|        .padding(.vertical, 4)\n35|    }\n36|}\n<\/content>\n<\/write_to_file>\n\n<write_to_file>\n<path>Views\/ContentView.swift<\/path>\n<content>\n1|import SwiftUI\n2|\n3|struct ContentView: View {\n4|    @StateObject private var viewModel = BusinessIdeasViewModel()\n5|    @State private var showingAddIdea = false\n6|    \n7|    var body: some View {\n8|        NavigationView {\n9|            ZStack {\n10|                LinearGradient(\n11|                    gradient: Gradient(colors: [Color.blue.opacity(0.1), Color.purple.opacity(0.1)]),\n12|                    startPoint: .topLeading,\n13|                    endPoint: .bottomTrailing\n14|                )\n15|                .ignoresSafeArea()\n16|                \n17|                ScrollView {\n18|                    if viewModel.ideas.isEmpty {\n19|                        VStack(spacing: 20) {\n20|                            Image(systemName: \"lightbulb\")\n21|                                .font(.system(size: 60))\n22|                                .foregroundColor(.yellow)\n23|                            \n24|                            Text(\"No Business Ideas Yet\")\n25|                                .font(.title2)\n26|                                .fontWeight(.bold)\n27|                            \n28|                            Text(\"Tap the + button to add your first business idea!\")\n29|                                .foregroundColor(.secondary)\n30|                                .multilineTextAlignment(.center)\n31|                                .padding(.horizontal)\n32|                        }\n33|                        .frame(maxWidth: .infinity, maxHeight: .infinity)\n34|                        .padding(.top, 100)\n35|                    } else {\n36|                        LazyVStack(spacing: 0) {\n37|                            ForEach(viewModel.ideas) { idea in\n38|                                IdeaCardView(idea: idea)\n39|                                    .transition(.opacity)\n40|                            }\n41|                            .onDelete(perform: viewModel.deleteIdea)\n42|                        }\n43|                        .padding(.vertical)\n44|                    }\n45|                }\n46|            }\n47|            .navigationTitle(\"Bizpark\")\n48|            .toolbar {\n49|                ToolbarItem(placement: .navigationBarTrailing) {\n50|                    Button {\n51|                        showingAddIdea = true\n52|                    } label: {\n53|                        Image(systemName: \"plus.circle.fill\")\n54|                            .font(.title2)\n55|                    }\n56|                }\n57|            }\n58|            .sheet(isPresented: $showingAddIdea) {\n59|                AddIdeaView(viewModel: viewModel)\n60|            }\n61|        }\n62|    }\n63|}\n<\/content>\n<\/write_to_file>",
      "timestamp" : 767610091.761589,
      "fileChanges" : [
        {
          "id" : "34202C69-39A3-42C4-B3CA-45647694492D",
          "path" : "ContentView.swift",
          "type" : "modified",
          "changes" : {
            "addedLines" : 50,
            "removedLines" : 0
          }
        },
        {
          "id" : "D8C76E8A-D105-414C-AA9C-A37C6CACE602",
          "path" : "IdeaCardView.swift",
          "type" : "added",
          "changes" : {
            "addedLines" : 36,
            "removedLines" : 0
          }
        },
        {
          "id" : "4B9126E9-5D0D-4CEF-96F6-4A378AAF6F4F",
          "path" : "BusinessIdea.swift",
          "type" : "added",
          "changes" : {
            "addedLines" : 15,
            "removedLines" : 0
          }
        },
        {
          "id" : "5AB469DC-F39B-4901-9C98-27C8EBD58F94",
          "path" : "AddIdeaView.swift",
          "type" : "added",
          "changes" : {
            "addedLines" : 66,
            "removedLines" : 0
          }
        },
        {
          "id" : "ED5F7A19-21B6-408D-B82B-291FADA99400",
          "path" : "BusinessIdeasViewModel.swift",
          "type" : "added",
          "changes" : {
            "addedLines" : 35,
            "removedLines" : 0
          }
        }
      ],
      "model" : "anthropic\/claude-3.5-sonnet",
      "role" : "assistant"
    },
    {
      "id" : "F528696C-9E0B-4631-93C1-3207D55E2F9A",
      "content" : "<usertask>добавь в приложение возможность переключения на темную тему\n(кнопки Rate this app, Share this app, Terms of use, Privacy policy).\n(Кнопки  Privacy policy и Terms of use должны вести на экраны с текстом)\n(Кнопка “Rate this app” должна открывать App Store с ссылкой на приложение, а не request review.)<\/usertask>",
      "timestamp" : 767610297.546261,
      "role" : "user"
    },
    {
      "id" : "770BC30A-AA8C-462E-92E0-4502476EDB3A",
      "content" : "<write_to_file>\n<path>Views\/SettingsView.swift<\/path>\n<content>\n1|import SwiftUI\n2|\n3|struct SettingsView: View {\n4|    @AppStorage(\"isDarkMode\") private var isDarkMode = false\n5|    @Environment(\\.openURL) private var openURL\n6|    @State private var showingTerms = false\n7|    @State private var showingPrivacy = false\n8|    \n9|    private let appStoreId = \"YOUR_APP_STORE_ID\" \/\/ Replace with your actual App Store ID\n10|    \n11|    var body: some View {\n12|        List {\n13|            Section {\n14|                Toggle(isOn: $isDarkMode) {\n15|                    Label(\"Dark Mode\", systemImage: \"moon.fill\")\n16|                }\n17|            }\n18|            \n19|            Section {\n20|                Button {\n21|                    shareApp()\n22|                } label: {\n23|                    Label(\"Share App\", systemImage: \"square.and.arrow.up\")\n24|                }\n25|                \n26|                Button {\n27|                    rateApp()\n28|                } label: {\n29|                    Label(\"Rate This App\", systemImage: \"star.fill\")\n30|                }\n31|            }\n32|            \n33|            Section {\n34|                Button {\n35|                    showingTerms = true\n36|                } label: {\n37|                    Label(\"Terms of Use\", systemImage: \"doc.text\")\n38|                }\n39|                \n40|                Button {\n41|                    showingPrivacy = true\n42|                } label: {\n43|                    Label(\"Privacy Policy\", systemImage: \"hand.raised.fill\")\n44|                }\n45|            }\n46|        }\n47|        .navigationTitle(\"Settings\")\n48|        .sheet(isPresented: $showingTerms) {\n49|            TermsView()\n50|        }\n51|        .sheet(isPresented: $showingPrivacy) {\n52|            PrivacyView()\n53|        }\n54|    }\n55|    \n56|    private func shareApp() {\n57|        let appUrl = URL(string: \"https:\/\/apps.apple.com\/app\/id\\(appStoreId)\")!\n58|        let activityVC = UIActivityViewController(\n59|            activityItems: [\"Check out Bizpark!\", appUrl],\n60|            applicationActivities: nil\n61|        )\n62|        \n63|        if let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene,\n64|           let window = windowScene.windows.first,\n65|           let rootVC = window.rootViewController {\n66|            activityVC.popoverPresentationController?.sourceView = rootVC.view\n67|            rootVC.present(activityVC, animated: true)\n68|        }\n69|    }\n70|    \n71|    private func rateApp() {\n72|        let appStoreURL = URL(string: \"https:\/\/apps.apple.com\/app\/id\\(appStoreId)?action=write-review\")!\n73|        openURL(appStoreURL)\n74|    }\n75|}\n<\/content>\n<\/write_to_file>\n\n<write_to_file>\n<path>Views\/TermsView.swift<\/path>\n<content>\n1|import SwiftUI\n2|\n3|struct TermsView: View {\n4|    @Environment(\\.dismiss) private var dismiss\n5|    \n6|    var body: some View {\n7|        NavigationView {\n8|            ScrollView {\n9|                VStack(alignment: .leading, spacing: 20) {\n10|                    Group {\n11|                        Text(\"Terms of Use\")\n12|                            .font(.title)\n13|                            .fontWeight(.bold)\n14|                        \n15|                        Text(\"Last Updated: \\(Date().formatted(date: .long, time: .omitted))\")\n16|                            .foregroundColor(.secondary)\n17|                        \n18|                        Text(\"1. Acceptance of Terms\")\n19|                            .font(.headline)\n20|                        Text(\"By accessing and using Bizpark, you accept and agree to be bound by the terms and provision of this agreement.\")\n21|                        \n22|                        Text(\"2. Use License\")\n23|                            .font(.headline)\n24|                        Text(\"This is a personal, non-exclusive, non-transferable license to use Bizpark for storing and managing your business ideas.\")\n25|                        \n26|                        Text(\"3. Disclaimer\")\n27|                            .font(.headline)\n28|                        Text(\"The app is provided 'as is' without warranties of any kind, either expressed or implied.\")\n29|                        \n30|                        Text(\"4. Limitations\")\n31|                            .font(.headline)\n32|                        Text(\"You may not: (a) modify or copy the materials; (b) use the materials for any commercial purpose; (c) attempt to decompile or reverse engineer any software contained in Bizpark.\")\n33|                    }\n34|                }\n35|                .padding()\n36|            }\n37|            .navigationBarTitleDisplayMode(.inline)\n38|            .toolbar {\n39|                ToolbarItem(placement: .navigationBarTrailing) {\n40|                    Button(\"Done\") {\n41|                        dismiss()\n42|                    }\n43|                }\n44|            }\n45|        }\n46|    }\n47|}\n<\/content>\n<\/write_to_file>\n\n<write_to_file>\n<path>Views\/PrivacyView.swift<\/path>\n<content>\n1|import SwiftUI\n2|\n3|struct PrivacyView: View {\n4|    @Environment(\\.dismiss) private var dismiss\n5|    \n6|    var body: some View {\n7|        NavigationView {\n8|            ScrollView {\n9|                VStack(alignment: .leading, spacing: 20) {\n10|                    Group {\n11|                        Text(\"Privacy Policy\")\n12|                            .font(.title)\n13|                            .fontWeight(.bold)\n14|                        \n15|                        Text(\"Last Updated: \\(Date().formatted(date: .long, time: .omitted))\")\n16|                            .foregroundColor(.secondary)\n17|                        \n18|                        Text(\"Data Collection\")\n19|                            .font(.headline)\n20|                        Text(\"Bizpark does not collect any personal information. All business ideas are stored locally on your device.\")\n21|                        \n22|                        Text(\"Data Storage\")\n23|                            .font(.headline)\n24|                        Text(\"Your business ideas are stored securely on your device and are not transmitted to any external servers.\")\n25|                        \n26|                        Text(\"Third-Party Services\")\n27|                            .font(.headline)\n28|                        Text(\"We do not share any information with third-party services or analytics providers.\")\n29|                        \n30|                        Text(\"Changes to Privacy Policy\")\n31|                            .font(.headline)\n32|                        Text(\"We reserve the right to update our Privacy Policy. Any changes will be reflected on this page.\")\n33|                    }\n34|                }\n35|                .padding()\n36|            }\n37|            .navigationBarTitleDisplayMode(.inline)\n38|            .toolbar {\n39|                ToolbarItem(placement: .navigationBarTrailing) {\n40|                    Button(\"Done\") {\n41|                        dismiss()\n42|                    }\n43|                }\n44|            }\n45|        }\n46|    }\n47|}\n<\/content>\n<\/write_to_file>\n\n<write_to_file>\n<path>Views\/ContentView.swift<\/path>\n<content>\n1|import SwiftUI\n2|\n3|struct ContentView: View {\n4|    @StateObject private var viewModel = BusinessIdeasViewModel()\n5|    @State private var showingAddIdea = false\n6|    @AppStorage(\"isDarkMode\") private var isDarkMode = false\n7|    \n8|    var body: some View {\n9|        NavigationView {\n10|            ZStack {\n11|                LinearGradient(\n12|                    gradient: Gradient(colors: [Color.blue.opacity(0.1), Color.purple.opacity(0.1)]),\n13|                    startPoint: .topLeading,\n14|                    endPoint: .bottomTrailing\n15|                )\n16|                .ignoresSafeArea()\n17|                \n18|                ScrollView {\n19|                    if viewModel.ideas.isEmpty {\n20|                        VStack(spacing: 20) {\n21|                            Image(systemName: \"lightbulb\")\n22|                                .font(.system(size: 60))\n23|                                .foregroundColor(.yellow)\n24|                            \n25|                            Text(\"No Business Ideas Yet\")\n26|                                .font(.title2)\n27|                                .fontWeight(.bold)\n28|                            \n29|                            Text(\"Tap the + button to add your first business idea!\")\n30|                                .foregroundColor(.secondary)\n31|                                .multilineTextAlignment(.center)\n32|                                .padding(.horizontal)\n33|                        }\n34|                        .frame(maxWidth: .infinity, maxHeight: .infinity)\n35|                        .padding(.top, 100)\n36|                    } else {\n37|                        LazyVStack(spacing: 0) {\n38|                            ForEach(viewModel.ideas) { idea in\n39|                                IdeaCardView(idea: idea)\n40|                                    .transition(.opacity)\n41|                            }\n42|                            .onDelete(perform: viewModel.deleteIdea)\n43|                        }\n44|                        .padding(.vertical)\n45|                    }\n46|                }\n47|            }\n48|            .navigationTitle(\"Bizpark\")\n49|            .toolbar {\n50|                ToolbarItem(placement: .navigationBarLeading) {\n51|                    NavigationLink(destination: SettingsView()) {\n52|                        Image(systemName: \"gearshape.fill\")\n53|                    }\n54|                }\n55|                \n56|                ToolbarItem(placement: .navigationBarTrailing) {\n57|                    Button {\n58|                        showingAddIdea = true\n59|                    } label: {\n60|                        Image(systemName: \"plus.circle.fill\")\n61|                            .font(.title2)\n62|                    }\n63|                }\n64|            }\n65|            .sheet(isPresented: $showingAddIdea) {\n66|                AddIdeaView(viewModel: viewModel)\n67|            }\n68|        }\n69|        .preferredColorScheme(isDarkMode ? .dark : .light)\n70|    }\n71|}\n<\/content>\n<\/write_to_file>",
      "timestamp" : 767610350.36978,
      "fileChanges" : [
        {
          "id" : "F92CE080-2A8A-4195-AF44-6F6D02B0520D",
          "changes" : {
            "addedLines" : 8,
            "removedLines" : 0
          },
          "type" : "modified",
          "path" : "ContentView.swift"
        },
        {
          "id" : "1C8D26D1-625D-4B5E-AE66-21184893EE54",
          "changes" : {
            "removedLines" : 0,
            "addedLines" : 47
          },
          "type" : "added",
          "path" : "PrivacyView.swift"
        },
        {
          "id" : "7101EA52-A874-4CF6-9F34-786373005CDF",
          "changes" : {
            "addedLines" : 47,
            "removedLines" : 0
          },
          "type" : "added",
          "path" : "TermsView.swift"
        },
        {
          "id" : "2A52CF3E-920C-4819-BD45-F2B9B39053C4",
          "changes" : {
            "addedLines" : 75,
            "removedLines" : 0
          },
          "type" : "added",
          "path" : "SettingsView.swift"
        }
      ],
      "model" : "anthropic\/claude-3.5-sonnet",
      "role" : "assistant"
    }
  ],
  "lastModified" : 767609919.119366
}